var documenterSearchIndex = {"docs":
[{"location":"gallery/simple_phylogeny/","page":"Simple example of plotting a phylogeny","title":"Simple example of plotting a phylogeny","text":"EditURL = \"../literate-gallery/simple_phylogeny.jl\"","category":"page"},{"location":"gallery/simple_phylogeny/#Simple-example-of-plotting-a-phylogeny","page":"Simple example of plotting a phylogeny","title":"Simple example of plotting a phylogeny","text":"","category":"section"},{"location":"gallery/simple_phylogeny/","page":"Simple example of plotting a phylogeny","title":"Simple example of plotting a phylogeny","text":"using CairoMakie, TreePlots, NewickTree\n\ntree =\n    nw\"(Human_coronavirus_NL63__YP_003767.1:0.2837167697,((((Coronavirus_AcCoV-JC34__YP_009380521.1:0.1753779846,Lucheng_Rn_rat_coronavirus__YP_009336484.1:0.1823729640):1.5633499702,(((((Murine_hepatitis_virus__NP_045300.1:0.0465644139,Murine_hepatitis_virus_strain_JHM__YP_209233.1:0.0400825485):0.0771107289,Rat_coronavirus_Parker__YP_003029848.1:0.1042243458):0.1303858841,(Human_coronavirus_HKU1__YP_173238.1:0.2884582318,(((Bovine_coronavirus__NP_150077.1:0.0252424258,Human_coronavirus_OC43__YP_009555241.1:0.0522904576):0.0109027241,Rabbit_coronavirus_HKU14__YP_005454245.1:0.0242597338):0.1634381639,Betacoronavirus_HKU24__YP_009113025.1:0.2237054710):0.0754395643):0.0399072843):0.8784475802,(((Pipistrellus_bat_coronavirus_HKU5__YP_001039962.1:0.2087545259,Tylonycteris_bat_coronavirus_HKU4__YP_001039953.1:0.1665826056):0.0840068345,(Betacoronavirus_England_1__YP_007188579.1:0.0015006674,Middle_East_respiratory_syndrome-related_coronavirus__YP_009047204.1:0.0000023308):0.2345306605):0.1724797525,Betacoronavirus_Erinaceus_VMC_DEU_2012__YP_009513010.1:0.2475827909):0.8267565826):0.1812279915,(((Severe_acute_respiratory_syndrome_coronavirus_2__YP_009724390.1:0.1322988464,Severe_acute_respiratory_syndrome-related_coronavirus__NP_828851.1:0.0988541333):0.5863592327,Bat_Hp-betacoronavirus_Zhejiang2013__YP_009072440.1:0.4591408199):0.4969413816,(Rousettus_bat_coronavirus__YP_009273005.1:0.2912220426,Rousettus_bat_coronavirus_HKU9__YP_001039971.1:0.2774975608):0.7498515344):0.1300788194):0.2026176920):0.6317604948,(Infectious_bronchitis_virus__NP_040831.1:0.7413582696,Turkey_coronavirus__YP_001941166.1:0.4175214245):0.3538495234):0.8226529179,BtMr-AlphaCoV_SAX2011__YP_009199609.1:0.4416013419):0.2205284043,Human_coronavirus_229E__NP_073551.1:0.2265542283);\"\n\nfig = Figure(size = (500, 600))\nax = Axis(fig[1, 1]; xautolimitmargin = (0.05, 2.0), xticks = 0:4)\nhideydecorations!(ax)\nhidespines!(ax, :l, :r, :t)\ntreeplot!(tree)\nfig","category":"page"},{"location":"gallery/simple_phylogeny/","page":"Simple example of plotting a phylogeny","title":"Simple example of plotting a phylogeny","text":"","category":"page"},{"location":"gallery/simple_phylogeny/","page":"Simple example of plotting a phylogeny","title":"Simple example of plotting a phylogeny","text":"This page was generated using Literate.jl.","category":"page"},{"location":"91-developer/#dev_docs","page":"Developer documentation","title":"Developer documentation","text":"","category":"section"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"note: Contributing guidelines\nIf you haven't, please read the Contributing guidelines first.","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"If you want to make contributions to this package that involves code, then this guide is for you.","category":"page"},{"location":"91-developer/#First-time-clone","page":"Developer documentation","title":"First time clone","text":"","category":"section"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"tip: If you have writing rights\nIf you have writing rights, you don't have to fork. Instead, simply clone and skip ahead. Whenever upstream is mentioned, use origin instead.","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"If this is the first time you work with this repository, follow the instructions below to clone the repository.","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"Fork this repo\nClone your repo (this will create a git remote called origin)\nAdd this repo as a remote:\ngit remote add upstream https://github.com/BenjaminDoran/TreePlots.jl","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"This will ensure that you have two remotes in your git: origin and upstream. You will create branches and push to origin, and you will fetch and update your local main branch from upstream.","category":"page"},{"location":"91-developer/#Linting-and-formatting","page":"Developer documentation","title":"Linting and formatting","text":"","category":"section"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"Install a plugin on your editor to use EditorConfig. This will ensure that your editor is configured with important formatting settings.","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"We use https://pre-commit.com to run the linters and formatters. In particular, the Julia code is formatted using JuliaFormatter.jl, so please install it globally first:","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"julia> # Press ]\npkg> activate\npkg> add JuliaFormatter","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"To install pre-commit, we recommend using pipx as follows:","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"# Install pipx following the link\npipx install pre-commit","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"With pre-commit installed, activate it as a pre-commit hook:","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"pre-commit install","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"To run the linting and formatting manually, enter the command below:","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"pre-commit run -a","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"Now, you can only commit if all the pre-commit tests pass.","category":"page"},{"location":"91-developer/#Testing","page":"Developer documentation","title":"Testing","text":"","category":"section"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"As with most Julia packages, you can just open Julia in the repository folder, activate the environment, and run test:","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"julia> # press ]\npkg> activate .\npkg> test","category":"page"},{"location":"91-developer/#Working-on-a-new-issue","page":"Developer documentation","title":"Working on a new issue","text":"","category":"section"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"We try to keep a linear history in this repo, so it is important to keep your branches up-to-date.","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"Fetch from the remote and fast-forward your local main\ngit fetch upstream\ngit switch main\ngit merge --ff-only upstream/main\nBranch from main to address the issue (see below for naming)\ngit switch -c 42-add-answer-universe\nPush the new local branch to your personal remote repository\ngit push -u origin 42-add-answer-universe\nCreate a pull request to merge your remote branch into the org main.","category":"page"},{"location":"91-developer/#Branch-naming","page":"Developer documentation","title":"Branch naming","text":"","category":"section"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"If there is an associated issue, add the issue number.\nIf there is no associated issue, and the changes are small, add a prefix such as \"typo\", \"hotfix\", \"small-refactor\", according to the type of update.\nIf the changes are not small and there is no associated issue, then create the issue first, so we can properly discuss the changes.\nUse dash separated imperative wording related to the issue (e.g., 14-add-tests, 15-fix-model, 16-remove-obsolete-files).","category":"page"},{"location":"91-developer/#Commit-message","page":"Developer documentation","title":"Commit message","text":"","category":"section"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"Use imperative or present tense, for instance: Add feature or Fix bug.\nHave informative titles.\nWhen necessary, add a body with details.\nIf there are breaking changes, add the information to the commit message.","category":"page"},{"location":"91-developer/#Before-creating-a-pull-request","page":"Developer documentation","title":"Before creating a pull request","text":"","category":"section"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"tip: Atomic git commits\nTry to create \"atomic git commits\" (recommended reading: The Utopic Git History).","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"Make sure the tests pass.\nMake sure the pre-commit tests pass.\nFetch any main updates from upstream and rebase your branch, if necessary:\ngit fetch upstream\ngit rebase upstream/main BRANCH_NAME\nThen you can open a pull request and work with the reviewer to address any issues.","category":"page"},{"location":"91-developer/#Building-and-viewing-the-documentation-locally","page":"Developer documentation","title":"Building and viewing the documentation locally","text":"","category":"section"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"Following the latest suggestions, we recommend using LiveServer to build the documentation. Here is how you do it:","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"Run julia --project=docs to open Julia in the environment of the docs.\nIf this is the first time building the docs\nPress ] to enter pkg mode\nRun pkg> dev . to use the development version of your package\nPress backspace to leave pkg mode\nExit the julia repl\nRun exit()\nEnter the docs folder cd docs.\nRun make liveserver to start docs in live mode, The documentation will update after saving a file with changes","category":"page"},{"location":"91-developer/#Making-a-new-release","page":"Developer documentation","title":"Making a new release","text":"","category":"section"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"To create a new release, you can follow these simple steps:","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"Create a branch release-x.y.z\nUpdate version in Project.toml\nUpdate the CHANGELOG.md:\nRename the section \"Unreleased\" to \"[x.y.z] - yyyy-mm-dd\" (i.e., version under brackets, dash, and date in ISO format)\nAdd a new section on top of it named \"Unreleased\"\nAdd a new link in the bottom for version \"x.y.z\"\nChange the \"[unreleased]\" link to use the latest version - end of line, vx.y.z ... HEAD.\nCreate a commit \"Release vx.y.z\", push, create a PR, wait for it to pass, merge the PR.\nGo back to main screen and click on the latest commit (link: https://github.com/BenjaminDoran/TreePlots.jl/commit/main)\nAt the bottom, write @JuliaRegistrator register","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"After that, you only need to wait and verify:","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"Wait for the bot to comment (should take < 1m) with a link to a PR to the registry\nFollow the link and wait for a comment on the auto-merge\nThe comment should said all is well and auto-merge should occur shortly\nAfter the merge happens, TagBot will trigger and create a new GitHub tag. Check on https://github.com/BenjaminDoran/TreePlots.jl/releases\nAfter the release is create, a \"docs\" GitHub action will start for the tag.\nAfter it passes, a deploy action will run.\nAfter that runs, the stable docs should be updated. Check them and look for the version number.","category":"page"},{"location":"95-reference/#reference","page":"Reference","title":"Reference","text":"","category":"section"},{"location":"95-reference/#Contents","page":"Reference","title":"Contents","text":"","category":"section"},{"location":"95-reference/","page":"Reference","title":"Reference","text":"Pages = [\"95-reference.md\"]","category":"page"},{"location":"95-reference/#Index","page":"Reference","title":"Index","text":"","category":"section"},{"location":"95-reference/","page":"Reference","title":"Reference","text":"Pages = [\"95-reference.md\"]","category":"page"},{"location":"95-reference/","page":"Reference","title":"Reference","text":"Modules = [TreePlots]","category":"page"},{"location":"95-reference/#TreePlots.distance-Tuple{}","page":"Reference","title":"TreePlots.distance","text":"distance(node)\n\nreturn scaler distance from node to parent of node. Defaults to 1\n\nTo extend treeplot to your type define method for TreePlots.distance(node::YourNodeType)\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#TreePlots.label-Tuple{Any}","page":"Reference","title":"TreePlots.label","text":"label(node)\n\nreturn string typed value or description of node.\n\nDefaults to string(nodevalue(node))\n\nTo extend treeplot to your type define method for TreePlots.label(node::YourNodeType)\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#TreePlots.treeplot","page":"Reference","title":"TreePlots.treeplot","text":"treeplot(tree; kwargs...)\n\nArgs:\n\ntree, the root node of a tree that has AbstractTrees.children() defined.   All nodes should be reachable by using AbstractTrees.PreOrderDFS() iterator.\n\nKeyword arguments:\n\nshowroot::Bool = false, if TreePlots.distance() is not nan for root, show line linking root to parent.\nlayoutstyle::Symbol = :dendrogram available options are :dendrogram, or :cladogram\n:dendrogram displays tree taking into account the distance between parent and children nodes as calculated from TreePlots.distance(node).   If the distance is not defined, it defaults to 1 and is equivalent to the :cladogram layout\n:cladogram displays the tree where each distance from a child node to their parent is set to 1.\nbranchstyle::Symbol = :square available options are :square or :straight\n:square will display line from child to parent as going back to the height of the parent,   before connecting back to the parent node at a right angle.\nstraight will display line from child to parent as a straight line from child to parent.\nlinecolor = :black, should match the color option in Makie's lines plot.   Can be either a single color :black, color plus alpha transperency (:black, 0.5), or a vector of numbers for each node in pre-walk order.   color for each node is associated to the line connecting it to its parent.\nlinewidth = 1, should match the linewidth option in Makie's lines plot.   Can be either a single width or a vector of numbers for each node in pre-walk order.   width for each node is associated to the line connecting it to its parent.\nlinecolormap=:viridis  color map associated to linecolor. can be symbel of known colormap or gradient created from cgrad().   see Makie's color documentation\nbranch_point_resolution = 25, number of points associated to each line segment.   Can be decreased to increase plotting speed.   Or, increased if lines that should be smooth are not.\nusemaxdepth = false, if true draw guide lines from each leaf tip to the depth of the leaf that is maximally distant from root.   Useful for connecting leaves to there location on the y axis (or θ axis if plotted on PolarAxis).\ntipannotationsvisible::Bool = true, whether to show text labels for each leaf tip.\ntipfontsize = 9.0f0, font size that tip labels are displayed at.\nopenangle = 0, Angle in radians that limits span of tree around the circle when plotted on PolarAxis.   if openangle = deg2rad(5) then leaf tips will spread across angles 0 to (2π - openangle).\ntipalign = (:left, :center) text alignment of tip labels.   see Makie options\ntipannotationoffset = (3.0f0, 0.0f0) offset of tip label from actual tip position.   The first value is associated with the x axis, and the second is associated with the y axis.   (Currently, only available for cartisian axis)\n\n\n\n\n\n","category":"function"},{"location":"tutorials/basics/","page":"Basic tree plot","title":"Basic tree plot","text":"EditURL = \"../literate-tutorials/basics.jl\"","category":"page"},{"location":"tutorials/basics/#Basic-tree-plot","page":"Basic tree plot","title":"Basic tree plot","text":"","category":"section"},{"location":"tutorials/basics/","page":"Basic tree plot","title":"Basic tree plot","text":"basic setup","category":"page"},{"location":"tutorials/basics/","page":"Basic tree plot","title":"Basic tree plot","text":"using CairoMakie, TreePlots\nusing AbstractTrees\nupdate_theme!(Theme(size = (500, 500)))","category":"page"},{"location":"tutorials/basics/#plot-the-tree","page":"Basic tree plot","title":"plot the tree","text":"","category":"section"},{"location":"tutorials/basics/","page":"Basic tree plot","title":"Basic tree plot","text":"tree = ((:a, :b), (:c, (:d, :e)))\ntreeplot(tree)","category":"page"},{"location":"tutorials/basics/","page":"Basic tree plot","title":"Basic tree plot","text":"Because most nested collections in julia have AbstractTrees.children defined they can be plotted with treeplot.","category":"page"},{"location":"tutorials/basics/","page":"Basic tree plot","title":"Basic tree plot","text":"We might want to just look at the tree rather than the axis","category":"page"},{"location":"tutorials/basics/","page":"Basic tree plot","title":"Basic tree plot","text":"fig = Figure()\nax = Axis(fig[1, 1])\nhidedecorations!(ax)\nhidespines!(ax)\ntreeplot!(tree)\nfig","category":"page"},{"location":"tutorials/basics/","page":"Basic tree plot","title":"Basic tree plot","text":"Rather than the square branches we can use straight branches","category":"page"},{"location":"tutorials/basics/","page":"Basic tree plot","title":"Basic tree plot","text":"fig = Figure()\nax = Axis(fig[1, 1])\nhidedecorations!(ax)\nhidespines!(ax)\ntreeplot!(tree; branchstyle = :straight)\nfig","category":"page"},{"location":"tutorials/basics/","page":"Basic tree plot","title":"Basic tree plot","text":"We can plot onto a Polar axis for a circular layout","category":"page"},{"location":"tutorials/basics/","page":"Basic tree plot","title":"Basic tree plot","text":"fig = Figure()\nax = PolarAxis(fig[1, 1])\nhidedecorations!(ax)\nhidespines!(ax)\ntreeplot!(tree)\nfig","category":"page"},{"location":"tutorials/basics/","page":"Basic tree plot","title":"Basic tree plot","text":"We can increase the tip label fontsize.","category":"page"},{"location":"tutorials/basics/","page":"Basic tree plot","title":"Basic tree plot","text":"fig = Figure()\nax = PolarAxis(fig[1, 1], rautolimitmargin = (0.0, 0.2))\nhidedecorations!(ax)\nhidespines!(ax)\ntreeplot!(tree; tipfontsize = 30)\nfig","category":"page"},{"location":"tutorials/basics/","page":"Basic tree plot","title":"Basic tree plot","text":"We can change the line color","category":"page"},{"location":"tutorials/basics/","page":"Basic tree plot","title":"Basic tree plot","text":"fig = Figure()\nax = PolarAxis(fig[1, 1], rautolimitmargin = (0.0, 0.1))\nhidedecorations!(ax)\nhidespines!(ax)\ntreeplot!(tree; linecolor = :orange, tipfontsize = 12)\nfig","category":"page"},{"location":"tutorials/basics/","page":"Basic tree plot","title":"Basic tree plot","text":"We can change the line color based on info in the tree","category":"page"},{"location":"tutorials/basics/","page":"Basic tree plot","title":"Basic tree plot","text":"branchcolors = map(PreOrderDFS(tree)) do node\n    hash(node)\nend\n\nfig = Figure()\nax = PolarAxis(fig[1, 1], rautolimitmargin = (0.0, 0.1))\nhidedecorations!(ax)\nhidespines!(ax)\ntreeplot!(tree; linecolor = branchcolors, tipfontsize = 12)\nfig","category":"page"},{"location":"tutorials/basics/","page":"Basic tree plot","title":"Basic tree plot","text":"For instance if we have external data about each node in the tree","category":"page"},{"location":"tutorials/basics/","page":"Basic tree plot","title":"Basic tree plot","text":"tree_data = Dict(\n    node => (; support = rand(), favorite_number = rand(1:5)) for node in PreOrderDFS(tree)\n)","category":"page"},{"location":"tutorials/basics/","page":"Basic tree plot","title":"Basic tree plot","text":"then we can plot support as the color and the favorite number as the line width.","category":"page"},{"location":"tutorials/basics/","page":"Basic tree plot","title":"Basic tree plot","text":"branchcolors = map(PreOrderDFS(tree)) do node\n    tree_data[node].support\nend\n\nbranchwidths = map(PreOrderDFS(tree)) do node\n    tree_data[node].favorite_number\nend\n\nfig = Figure()\nax = PolarAxis(fig[1, 1], rautolimitmargin = (0.0, 0.1))\nhidedecorations!(ax)\nhidespines!(ax)\np = treeplot!(tree; linecolor = branchcolors, linewidth = branchwidths, tipfontsize = 12)\nColorbar(fig[1, 2][3, 1], p)\nfig","category":"page"},{"location":"tutorials/basics/","page":"Basic tree plot","title":"Basic tree plot","text":"if we have too many leaf tips to read their labels anyway we can turn off the label visibility","category":"page"},{"location":"tutorials/basics/","page":"Basic tree plot","title":"Basic tree plot","text":"fig = Figure()\nax = PolarAxis(fig[1, 1], rautolimitmargin = (0.0, 0.1))\nhidedecorations!(ax)\nhidespines!(ax)\np = treeplot!(\n    tree;\n    linecolor = branchcolors,\n    linewidth = branchwidths,\n    tipfontsize = 12,\n    tipannotationsvisible = false,\n)\nColorbar(fig[1, 2][3, 1], p)\nfig","category":"page"},{"location":"tutorials/basics/","page":"Basic tree plot","title":"Basic tree plot","text":"For a PolarAxis, We can also control the span across which the tree is plotted. with the openangle parameter","category":"page"},{"location":"tutorials/basics/","page":"Basic tree plot","title":"Basic tree plot","text":"fig = Figure()\nax = PolarAxis(fig[1, 1], rautolimitmargin = (0.0, 0.1))\nhidedecorations!(ax)\nhidespines!(ax)\np = treeplot!(\n    tree;\n    linecolor = branchcolors,\n    linewidth = branchwidths,\n    tipfontsize = 12,\n    openangle = deg2rad(140),\n)\nColorbar(fig[1, 2][3, 1], p)\nfig","category":"page"},{"location":"tutorials/basics/","page":"Basic tree plot","title":"Basic tree plot","text":"","category":"page"},{"location":"tutorials/basics/","page":"Basic tree plot","title":"Basic tree plot","text":"This page was generated using Literate.jl.","category":"page"},{"location":"90-contributing/#contributing","page":"Contributing guidelines","title":"Contributing guidelines","text":"","category":"section"},{"location":"90-contributing/","page":"Contributing guidelines","title":"Contributing guidelines","text":"First of all, thanks for the interest!","category":"page"},{"location":"90-contributing/","page":"Contributing guidelines","title":"Contributing guidelines","text":"We welcome all kinds of contribution, including, but not limited to code, documentation, examples, configuration, issue creating, etc.","category":"page"},{"location":"90-contributing/","page":"Contributing guidelines","title":"Contributing guidelines","text":"Be polite and respectful, and follow the code of conduct.","category":"page"},{"location":"90-contributing/#Bug-reports-and-discussions","page":"Contributing guidelines","title":"Bug reports and discussions","text":"","category":"section"},{"location":"90-contributing/","page":"Contributing guidelines","title":"Contributing guidelines","text":"If you think you found a bug, feel free to open an issue. Focused suggestions and requests can also be opened as issues. Before opening a pull request, start an issue or a discussion on the topic, please.","category":"page"},{"location":"90-contributing/#Working-on-an-issue","page":"Contributing guidelines","title":"Working on an issue","text":"","category":"section"},{"location":"90-contributing/","page":"Contributing guidelines","title":"Contributing guidelines","text":"If you found an issue that interests you, comment on that issue what your plans are. If the solution to the issue is clear, you can immediately create a pull request (see below). Otherwise, say what your proposed solution is and wait for a discussion around it.","category":"page"},{"location":"90-contributing/","page":"Contributing guidelines","title":"Contributing guidelines","text":"tip: Tip\nFeel free to ping us after a few days if there are no responses.","category":"page"},{"location":"90-contributing/","page":"Contributing guidelines","title":"Contributing guidelines","text":"If your solution involves code (or something that requires running the package locally), check the developer documentation. Otherwise, you can use the GitHub interface directly to create your pull request.","category":"page"},{"location":"changelog/","page":"Change Log","title":"Change Log","text":"[unreleased]","category":"page"},{"location":"changelog/","page":"Change Log","title":"Change Log","text":"[0.1.0] | 2025-02-09","category":"page"},{"location":"changelog/","page":"Change Log","title":"Change Log","text":"applied bestietemplates v0.14.1 for best practices\nadded basic treeplot recipe for Makie backend\nadded initial documentation","category":"page"},{"location":"tutorial-overview/#Tutorials","page":"Tutorials","title":"Tutorials","text":"","category":"section"},{"location":"tutorial-overview/","page":"Tutorials","title":"Tutorials","text":"Here is more text","category":"page"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = TreePlots","category":"page"},{"location":"#TreePlots","page":"Home","title":"TreePlots","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for TreePlots.","category":"page"},{"location":"","page":"Home","title":"Home","text":"This is a package that aims to provide generic plotting recipes for tree like data structures. As such the recipes should only require that your data structure fulfills the AbstractTrees interface, i.e. has AbstractTrees.children(YourType) defined.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Optionally, TreePlots.distance(YourType) and TreePlots.label(YourType) can be defined to allow plotting trees with variable distances between children and parent nodes and pretty printing of each node in the tree respectively.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Currently, we only provide Makie.jl backends, but are interested in contributions for recipes for Plots.jl and TidyPlots.jl. As well as any other backends or custom tree structures that don't work automatically. See the ext folder for example extensions.","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"using Pkg\nPkg.add(\"https://github.com/BenjaminDoran/TreePlots.jl.git\")","category":"page"},{"location":"#Basic-usage","page":"Home","title":"Basic usage","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"using CairoMakie, TreePlots\ntree = ((:a, :b), (:c, :d))\ntreeplot(tree)","category":"page"},{"location":"","page":"Home","title":"Home","text":"see Tutorials and Gallery for more in depth examples","category":"page"},{"location":"#treeplot()-documentation","page":"Home","title":"treeplot() documentation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"see reference for other function's documentation","category":"page"},{"location":"","page":"Home","title":"Home","text":"treeplot","category":"page"},{"location":"#TreePlots.treeplot-index","page":"Home","title":"TreePlots.treeplot","text":"treeplot(tree; kwargs...)\n\nArgs:\n\ntree, the root node of a tree that has AbstractTrees.children() defined.   All nodes should be reachable by using AbstractTrees.PreOrderDFS() iterator.\n\nKeyword arguments:\n\nshowroot::Bool = false, if TreePlots.distance() is not nan for root, show line linking root to parent.\nlayoutstyle::Symbol = :dendrogram available options are :dendrogram, or :cladogram\n:dendrogram displays tree taking into account the distance between parent and children nodes as calculated from TreePlots.distance(node).   If the distance is not defined, it defaults to 1 and is equivalent to the :cladogram layout\n:cladogram displays the tree where each distance from a child node to their parent is set to 1.\nbranchstyle::Symbol = :square available options are :square or :straight\n:square will display line from child to parent as going back to the height of the parent,   before connecting back to the parent node at a right angle.\nstraight will display line from child to parent as a straight line from child to parent.\nlinecolor = :black, should match the color option in Makie's lines plot.   Can be either a single color :black, color plus alpha transperency (:black, 0.5), or a vector of numbers for each node in pre-walk order.   color for each node is associated to the line connecting it to its parent.\nlinewidth = 1, should match the linewidth option in Makie's lines plot.   Can be either a single width or a vector of numbers for each node in pre-walk order.   width for each node is associated to the line connecting it to its parent.\nlinecolormap=:viridis  color map associated to linecolor. can be symbel of known colormap or gradient created from cgrad().   see Makie's color documentation\nbranch_point_resolution = 25, number of points associated to each line segment.   Can be decreased to increase plotting speed.   Or, increased if lines that should be smooth are not.\nusemaxdepth = false, if true draw guide lines from each leaf tip to the depth of the leaf that is maximally distant from root.   Useful for connecting leaves to there location on the y axis (or θ axis if plotted on PolarAxis).\ntipannotationsvisible::Bool = true, whether to show text labels for each leaf tip.\ntipfontsize = 9.0f0, font size that tip labels are displayed at.\nopenangle = 0, Angle in radians that limits span of tree around the circle when plotted on PolarAxis.   if openangle = deg2rad(5) then leaf tips will spread across angles 0 to (2π - openangle).\ntipalign = (:left, :center) text alignment of tip labels.   see Makie options\ntipannotationoffset = (3.0f0, 0.0f0) offset of tip label from actual tip position.   The first value is associated with the x axis, and the second is associated with the y axis.   (Currently, only available for cartisian axis)\n\n\n\n\n\n","category":"function"},{"location":"#Contributors","page":"Home","title":"Contributors","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"<!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section -->\n<!-- prettier-ignore-start -->\n<!-- markdownlint-disable -->\n\n<!-- markdownlint-restore -->\n<!-- prettier-ignore-end -->\n\n<!-- ALL-CONTRIBUTORS-LIST:END -->","category":"page"}]
}
